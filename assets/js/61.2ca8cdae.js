(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{237:function(a,t,e){"use strict";e.r(t);var s=e(0),n=Object(s.a)({},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"引言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引言","aria-hidden":"true"}},[a._v("#")]),a._v(" 引言")]),a._v(" "),e("ul",[e("li",[a._v("约定符号 () 表示一个寄存器或一个内存地址的内容。例如 (ax)=100H 表示 ax 中的内容设置为 100h；(21000H)=20H 表示 2000:1000 出的内容为 20H。")]),a._v(" "),e("li",[a._v("约定 idata 表示常量")]),a._v(" "),e("li",[a._v("inc：表示自增1，"),e("code",[a._v("inc bx")])])]),a._v(" "),e("h2",{attrs:{id:"bx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bx","aria-hidden":"true"}},[a._v("#")]),a._v(" [bx]")]),a._v(" "),e("ul",[e("li",[a._v("[bx] 表示内存单元的偏移地址")])]),a._v(" "),e("div",{staticClass:"language-assembly extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("mov bx,0\nmov ax,[bx] // 1个字\nmov al,[bx] // 8字节\n")])])]),e("h2",{attrs:{id:"loop-指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loop-指令","aria-hidden":"true"}},[a._v("#")]),a._v(" loop 指令")]),a._v(" "),e("ul",[e("li",[a._v("CX 中存放循环的次数，执行时 CX 中的内容自减1。相当于C的do while")]),a._v(" "),e("li",[a._v("判断 CX 中的值，不为0则转至标号处执行程序，为0则向下执行。")]),a._v(" "),e("li",[a._v("先自减再判断")])]),a._v(" "),e("div",{staticClass:"language-assembly extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(";计算2^12\nassume cs:code\ncode segment\nstart:  mov ax,2\n        mov cx,11\n        p:add,ax,ax       \n        loop p\n        mov ax,4c00H\n        int 21H\ncode ends\nend start\n")])])])])},[],!1,null,null,null);t.default=n.exports}}]);