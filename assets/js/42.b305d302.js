(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{282:function(t,v,s){"use strict";s.r(v);var _=s(0),a=Object(_.a)({},function(){var t=this,v=t.$createElement,s=t._self._c||v;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"ps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ps","aria-hidden":"true"}},[t._v("#")]),t._v(" ps")]),t._v(" "),s("p",[t._v("Linux中的 "),s("code",[t._v("ps")]),t._v(" 命令是 Process Status 的缩写。"),s("code",[t._v("ps")]),t._v(" 命令用来列出系统中当前运行的那些进程。")]),t._v(" "),s("p",[s("code",[t._v("ps")]),t._v(" 命令列出的是当前那些进程的快照，就是执行ps命令的那个时刻的那些进程，如果想要动态的显示进程信息，就可以使用 "),s("code",[t._v("top")]),t._v(" 命令。")]),t._v(" "),s("p",[s("code",[t._v("kill")]),t._v(" 命令用于杀死进程。")]),t._v(" "),s("p",[s("code",[t._v("ps")]),t._v(" 命令标识"),s("router-link",{attrs:{to:"/learning/linux/进程.html"}},[t._v("进程")]),t._v("的5种状态码:")],1),t._v(" "),s("p",[t._v("D 不可中断 uninterruptible sleep (usually IO)")]),t._v(" "),s("p",[t._v("R 运行 runnable (on run queue)")]),t._v(" "),s("p",[t._v("S 中断 sleeping")]),t._v(" "),s("p",[t._v("T 停止 traced or stopped")]),t._v(" "),s("p",[t._v("Z 僵死 a defunct (”zombie”) process")]),t._v(" "),s("h3",{attrs:{id:"参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数","aria-hidden":"true"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),s("p",[t._v("参数说明：")]),t._v(" "),s("ul",[s("li",[t._v("-A 显示所有进程（等价于-e）(utility)")]),t._v(" "),s("li",[t._v("-a 显示一个终端的所有进程，除了会话引线")]),t._v(" "),s("li",[t._v("-N 忽略选择。")]),t._v(" "),s("li",[t._v("-d 显示所有进程，但省略所有的会话引线(utility)")]),t._v(" "),s("li",[t._v("-x 显示没有控制终端的进程，同时显示各个命令的具体路径。dx不可合- 用。（utility）")]),t._v(" "),s("li",[t._v("-p pid 进程使用cpu的时间")]),t._v(" "),s("li",[t._v("-u uid or username 选择有效的用户id或者是用户名")]),t._v(" "),s("li",[t._v("-g gid or groupname 显示组的所有进程。")]),t._v(" "),s("li",[t._v("U username 显示该用户下的所有进程，且显示各个命令的详细路径。如- :ps U zhang;(utility)")]),t._v(" "),s("li",[t._v("-f 全部列出，通常和其他选项联用。如：ps -fa or ps -fx and so - on.")]),t._v(" "),s("li",[t._v("-l 长格式（有F,wchan,C 等字段）")]),t._v(" "),s("li",[t._v("-j 作业格式")]),t._v(" "),s("li",[t._v("-o 用户自定义格式。")]),t._v(" "),s("li",[t._v("v 以虚拟存储器格式显示")]),t._v(" "),s("li",[t._v("s 以信号格式显示")]),t._v(" "),s("li",[t._v("-m 显示所有的线程")]),t._v(" "),s("li",[t._v("-H 显示进程的层次(和其它的命令合用，如：ps -Ha)（utility）")]),t._v(" "),s("li",[t._v("e 命令之后显示环境（如：ps -d e; ps -a e）(utility)")]),t._v(" "),s("li",[t._v("h 不显示第一行")])]),t._v(" "),s("h3",{attrs:{id:"实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),s("ol",[s("li",[t._v("显示所有进程信息（TTY 为 ? 表示守护进程）")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -A\n  PID TTY          TIME CMD\n    1 ?        00:00:00 init\n   51 tty2     00:00:00 init\n   52 tty2     00:00:00 sh\n  107 pts/0    00:00:00 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n  275 tty2     00:00:01 node\n  504 ?        00:00:00 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n  610 tty3     00:00:00 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("显示用户信息")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -u\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定用户")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -u root\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("最常用???")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -aux\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot         1  0.0  0.0   8976   388 ?        Ssl  15:29   0:00 /init\nroot        51  0.0  0.0   9324   204 tty2     Ss   15:29   0:00 /init\nlianmed    327  0.0  0.1  37012 18548 tty2     S    15:50   0:01 /usr/bin/python lib/python/jedi/evaluate/compiled/subprocess/__main__.py lib/python 3.7.5\nlianmed    504  0.0  0.0  15112  2408 ?        S    18:17   0:00 -bash\nroot       599  0.0  0.0   8976   216 tty3     Ss   18:41   0:00 /init\nlianmed    600  0.0  0.0  15036  2288 tty3     S    18:41   0:00 -bash\nlianmed    627  0.0  0.0  16640  1780 tty3     R    19:03   0:00 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -aux\n")])])]),s("p",[t._v("列说明")]),t._v(" "),s("ul",[s("li",[t._v("USER： 用户名")]),t._v(" "),s("li",[t._v("PID： 进程ID（Process ID）")]),t._v(" "),s("li",[t._v("%CPU： 进程的cpu占用率")]),t._v(" "),s("li",[t._v("%MEM： 进程的内存占用率")]),t._v(" "),s("li",[t._v("VSZ： 进程所使用的虚存的大小（Virtual Size）")]),t._v(" "),s("li",[t._v("RSS： 进程使用的驻留集大小或者是实际内存的大小，Kbytes字节。")]),t._v(" "),s("li",[t._v("TTY： 与进程关联的终端（tty）")]),t._v(" "),s("li",[t._v("STAT： 进程的状态：进程状态使用字符表示的（STAT的状态码）")]),t._v(" "),s("li",[t._v("TIME： 进程使用的总cpu时间")]),t._v(" "),s("li",[t._v("COMMAND： 正在执行的命令行命令")])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("-ef\n列说明")])]),t._v(" "),s("ul",[s("li",[t._v("UID\t执行该进程的用户ID")]),t._v(" "),s("li",[t._v("PID\t进程编号")]),t._v(" "),s("li",[t._v("PPID\t该进程的父进程编号")]),t._v(" "),s("li",[t._v("C\t该进程所在的CPU利用率")]),t._v(" "),s("li",[t._v("STIME\t进程执行时间")]),t._v(" "),s("li",[t._v("TTY\t进程相关的终端类型")]),t._v(" "),s("li",[t._v("TIME\t进程所占用的CPU时间")]),t._v(" "),s("li",[t._v("CMD\t创建该进程的指令")])])])},[],!1,null,null,null);v.default=a.exports}}]);